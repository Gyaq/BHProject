// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210524021911_AddingDomainObjects")]
    partial class AddingDomainObjects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("API.Entities.AppReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Reason");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            DateTime = new DateTime(2021, 5, 23, 19, 19, 10, 784, DateTimeKind.Local).AddTicks(5062),
                            ReasonDescription = "Having a better commute will really help with my gas costs and ware and tear on my car.",
                            ReasonTitle = "Easy Commute",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 2,
                            DateTime = new DateTime(2021, 5, 23, 19, 19, 10, 784, DateTimeKind.Local).AddTicks(6205),
                            ReasonDescription = "Working with a good stable company will be a nice change from the companies and contracts I've been envolved with in the past",
                            ReasonTitle = "Stable company",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 4,
                            DateTime = new DateTime(2021, 5, 23, 19, 19, 10, 784, DateTimeKind.Local).AddTicks(6216),
                            ReasonDescription = "The older I get the more important benifits matter to me.",
                            ReasonTitle = "Good Benifits",
                            SortOrder = 1
                        });
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Robbert",
                            ImageUrl = "https://en.wikipedia.org/wiki/Robert_Smith_(musician)#/media/File:Robert_Smith_(musician)_crop.jpg",
                            JoinDate = new DateTime(2019, 5, 23, 19, 19, 10, 781, DateTimeKind.Local).AddTicks(4348),
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sally",
                            ImageUrl = "https://en.wikipedia.org/wiki/Sally_Field#/media/File:Sally_Field_(11205)_(cropped).jpg",
                            JoinDate = new DateTime(2020, 5, 23, 19, 19, 10, 783, DateTimeKind.Local).AddTicks(3223),
                            LastName = "Field"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Peter",
                            ImageUrl = "https://en.wikipedia.org/wiki/Peter_Gabriel#/media/File:Peter_Gabriel_(3)_(cropped).jpg",
                            JoinDate = new DateTime(2021, 3, 23, 19, 19, 10, 783, DateTimeKind.Local).AddTicks(3247),
                            LastName = "Gaberial"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Genny",
                            ImageUrl = "https://en.wikipedia.org/wiki/Ginny_Weasley#/media/File:Ginny_Weasley_poster.jpg",
                            JoinDate = new DateTime(2020, 2, 23, 19, 19, 10, 783, DateTimeKind.Local).AddTicks(3252),
                            LastName = "Weasley"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
